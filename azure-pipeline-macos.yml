trigger:
- main
- macos
- features/*
- fix/*
name: $(BuildID)

variables:
- group: saiive.live

stages:
- stage: macOS
  displayName: macOS
  
  jobs:
  - job: ReleaseNotes
    displayName: "Generate release notes"
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: Bash@3
        displayName: "Prepare"
        inputs:
          targetType: 'inline'
          script: |
            mkdir -p  $(build.artifactStagingDirectory)/release-notes/
            touch $(build.artifactStagingDirectory)/release-notes/release-notes.txt

      - task: XplatGenerateReleaseNotes@3
        inputs:
          outputfile: '$(build.artifactStagingDirectory)/release-notes/release-notes.txt'
          templateLocation: 'File'
          templatefile: '.devops/release_notes_template.txt'
          dumpPayloadToConsole: true
          dumpPayloadToFile: false
          replaceFile: false
          getParentsAndChildren: False
          getAllParents: False
          getIndirectPullRequests: False
    
      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'release-notes'

  - job: BuildMacOS
    dependsOn: ReleaseNotes
    displayName: "Build macOS Dev"
    pool:
      vmImage: 'macOS-latest'

    steps:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'Microsoft Partner Network(551ab192-148c-445b-ae4f-0d0107e6f5de)'
          KeyVaultName: 'defichain-wallet'
          SecretsFilter: 'apple-macos-developerid-cert-password'
          RunAsPreJob: true

      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'DefiChainWalletMacOSDeveloperID.p12'
          certPwd: '$(apple-macos-developerid-cert-password)'
          keychain: 'temp'

      - task: InstallAppleProvisioningProfile@1
        inputs:
          provisioningProfileLocation: 'secureFiles'
          provProfileSecureFile: 'at.saiive.live.adhoc-macos.provisionprofile'

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion)

      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            #cd $(Build.SourcesDirectory)
            #$(FlutterToolPath)/flutter doctor -v
            #$(FlutterToolPath)/flutter precache

      - task: Bash@3
        displayName: "Flutter enable macos"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter config --enable-macos-desktop

      - task: Bash@3
        displayName: "Flutter build icons"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter pub get
            $(FlutterToolPath)/flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-staging.yaml
            cp -av $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon-staging.appiconset/* $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon.appiconset/

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true

      - task: Bash@3
        displayName: "Build MacOS Staging"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter build macos --release --target=lib/main.dart --build-name=$(AppVersion) --verbose

      - task: Bash@3
        displayName: 'Sign .app'
        inputs:
          targetType: 'inline'
          script: |
            /usr/bin/codesign --force --deep -s 5QAM4Z73EV ./build/macos/Build/Products/Release/walletapp.app

      - task: Bash@3
        displayName: 'Create .dmg'
        inputs:
          targetType: 'inline'
          script: |
            brew install create-dmg

            create-dmg \
              --volname "defichainwallet-debug" \
              --window-pos 200 120 \
              --window-size 800 529 \
              --icon-size 130 \
              --text-size 14 \
              --icon "build/macos/Build/Products/Release/walletapp.app" 260 250 \
              --hide-extension "walletapp.app" \
              --app-drop-link 540 250 \
              --hdiutil-quiet \
              "walletapp.dmg" \
              "build/macos/Build/Products/Release/walletapp.app"

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: 'walletapp.dmg'
          targetFolder: '$(build.artifactStagingDirectory)/macos/debug'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'debug-macos'

  - job: BuildMacOSStaging
    dependsOn: ReleaseNotes
    displayName: "Build macOS Staging"
    pool:
      vmImage: 'macOS-latest'

    steps:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'Microsoft Partner Network(551ab192-148c-445b-ae4f-0d0107e6f5de)'
          KeyVaultName: 'defichain-wallet'
          SecretsFilter: 'apple-macos-developerid-cert-password'
          RunAsPreJob: true

      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'DefiChainWalletMacOSDeveloperID.p12'
          certPwd: '$(apple-macos-developerid-cert-password)'
          keychain: 'temp'

      - task: InstallAppleProvisioningProfile@1
        inputs:
          provisioningProfileLocation: 'secureFiles'
          provProfileSecureFile: 'at.saiive.live.adhoc-macos.provisionprofile'

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion) 

      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            #cd $(Build.SourcesDirectory)
            #$(FlutterToolPath)/flutter doctor -v
            #$(FlutterToolPath)/flutter precache

      - task: Bash@3
        displayName: "Flutter enable macos"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter config --enable-macos-desktop

      - task: Bash@3
        displayName: "Flutter build icons"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter pub get
            $(FlutterToolPath)/flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-staging.yaml
            cp -av $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon-staging.appiconset/* $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon.appiconset/

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true

      - task: Bash@3
        displayName: "Build MacOS Staging"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter build macos --release --target=lib/main_staging.dart --build-name=$(AppVersion) --verbose

      - task: Bash@3
        displayName: 'Sign .app'
        inputs:
          targetType: 'inline'
          script: |
            /usr/bin/codesign --force --deep -s 5QAM4Z73EV ./build/macos/Build/Products/Release/walletapp.app

      - task: Bash@3
        displayName: 'Create .dmg'
        inputs:
          targetType: 'inline'
          script: |
            brew install create-dmg

            create-dmg \
              --volname "defichainwallet-staging" \
              --window-pos 200 120 \
              --window-size 800 529 \
              --icon-size 130 \
              --text-size 14 \
              --icon "build/macos/Build/Products/Release/walletapp.app" 260 250 \
              --hide-extension "walletapp.app" \
              --app-drop-link 540 250 \
              --hdiutil-quiet \
              "walletapp.dmg" \
              "build/macos/Build/Products/Release/walletapp.app"

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: 'walletapp.dmg'
          targetFolder: '$(build.artifactStagingDirectory)/macos/staging'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'staging-macos'

  - job: BuildMacOSProduction
    dependsOn: ReleaseNotes
    displayName: "Build macOS Production"
    pool:
      vmImage: 'macOS-latest'
    
    steps:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'Microsoft Partner Network(551ab192-148c-445b-ae4f-0d0107e6f5de)'
          KeyVaultName: 'defichain-wallet'
          SecretsFilter: 'apple-macos-developerid-cert-password'
          RunAsPreJob: true

      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'DefiChainWalletMacOSDeveloperID.p12'
          certPwd: '$(apple-macos-developerid-cert-password)'
          keychain: 'temp'

      - task: InstallAppleProvisioningProfile@1
        inputs:
          provisioningProfileLocation: 'secureFiles'
          provProfileSecureFile: 'at.saiive.live.adhoc-macos.provisionprofile'

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion) 

      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            #cd $(Build.SourcesDirectory)
            #$(FlutterToolPath)/flutter doctor -v
            #$(FlutterToolPath)/flutter precache

      - task: Bash@3
        displayName: "Flutter enable macos"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter config --enable-macos-desktop

      - task: Bash@3
        displayName: "Flutter build icons"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter pub get
            $(FlutterToolPath)/flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-staging.yaml 
            cp -av $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon-staging.appiconset/* $(Build.SourcesDirectory)/ios/Runner/Assets.xcassets/AppIcon.appiconset/

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true

      - task: Bash@3
        displayName: "Build MacOS Staging"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter build macos --release --target=lib/main_prod.dart --build-name=$(AppVersion) --verbose

      - task: Bash@3
        displayName: 'Sign .app'
        inputs:
          targetType: 'inline'
          script: |
            /usr/bin/codesign --force --deep -s 5QAM4Z73EV ./build/macos/Build/Products/Release/walletapp.app

      - task: Bash@3
        displayName: 'Create .dmg'
        inputs:
          targetType: 'inline'
          script: |
            brew install create-dmg

            create-dmg \
              --volname "defichainwallet-staging" \
              --window-pos 200 120 \
              --window-size 800 529 \
              --icon-size 130 \
              --text-size 14 \
              --icon "build/macos/Build/Products/Release/walletapp.app" 260 250 \
              --hide-extension "walletapp.app" \
              --app-drop-link 540 250 \
              --hdiutil-quiet \
              "walletapp.dmg" \
              "build/macos/Build/Products/Release/walletapp.app"

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: 'walletapp.dmg'
          targetFolder: '$(build.artifactStagingDirectory)/macos/staging'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'staging-macos'
