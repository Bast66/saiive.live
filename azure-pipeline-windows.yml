trigger:
- main
- windowsbuild
- features/*
- fix/*
name: $(BuildID)

variables:
- group: App

stages:
- stage: Windows
  displayName: Windows
  
  jobs:
  - job: ReleaseNotes
    displayName: "Generate release notes"
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: Bash@3
        displayName: "Prepare"
        inputs:
          targetType: 'inline'
          script: |
            mkdir -p  $(build.artifactStagingDirectory)/release-notes/
            touch $(build.artifactStagingDirectory)/release-notes/release-notes.txt

      - task: XplatGenerateReleaseNotes@3
        inputs:
          outputfile: '$(build.artifactStagingDirectory)/release-notes/release-notes.txt'
          templateLocation: 'File'
          templatefile: '.devops/release_notes_template.txt'
          dumpPayloadToConsole: true
          dumpPayloadToFile: false
          replaceFile: false
          getParentsAndChildren: False
          getAllParents: False
          getIndirectPullRequests: False
      
      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'release-notes'
          
  - job: BuildWindowsDev
    dependsOn: ReleaseNotes
    displayName: "Build Windows DEV"
    pool:
      vmImage: 'windows-latest'
    
    steps:

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion) 

      - task: CmdLine@2
        displayName: "Flutter prepare"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter doctor -v
            $(FlutterToolPath)\flutter precache
      
      - task: CmdLine@2
        displayName: "Flutter enable windows"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter config --enable-windows-desktop

      - task: CmdLine@2
        displayName: "Flutter build icons"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter pub get
            $(FlutterToolPath)\flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-dev.yaml 

            cd windows/runner/resources
            xcopy /Y app_icon_dev.ico app_icon.ico

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true

      - task: FlutterBuild@0
        displayName: Windows Debug
        inputs:
          target: 'windows'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: $(AppVersion)
          debugMode: true
          buildFlavour: 'dev'
          entryPoint: 'lib/main.dart'
          buildNumber: $(Build.BuildNumber)

          
      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '$(Build.SourcesDirectory)\build\windows\runner\Debug\**'
          targetFolder: '$(build.artifactStagingDirectory)/windows/debug'

      - task: CmdLine@2
        displayName: "Flutter clean"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter clean
            $(FlutterToolPath)\flutter precache

            
      - task: FlutterBuild@0
        displayName: Windows Release
        inputs:
          target: 'windows'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: $(AppVersion)
          buildFlavour: 'dev'
          buildNumber: $(Build.BuildNumber)

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '$(Build.SourcesDirectory)\build\windows\runner\Release\**'
          targetFolder: '$(build.artifactStagingDirectory)/windows/release'
      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'dev-windows'

  - job: BuildWindowsStaging
    dependsOn: ReleaseNotes
    displayName: "Build Windows STAGING"
    pool:
      vmImage: 'windows-latest'
    
    steps:
      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion) 

      - task: CmdLine@2
        displayName: "Flutter clean"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter clean
           
      - task: CmdLine@2
        displayName: "Flutter enable windows"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter config --enable-windows-desktop

      - task: CmdLine@2
        displayName: "Flutter build icons"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter pub get
            $(FlutterToolPath)\flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-staging.yaml 

            cd windows/runner/resources
            xcopy /Y app_icon_staging.ico app_icon.ico

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true

      - task: FlutterBuild@0
        displayName: Windows Release
        inputs:
          target: 'windows'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: $(AppVersion)
          buildFlavour: 'staging'
          entryPoint: 'lib/main_staging.dart'
          buildNumber: $(Build.BuildNumber)

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '$(Build.SourcesDirectory)\build\windows\runner\Release\**'
          targetFolder: '$(build.artifactStagingDirectory)/windows/release'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'staging-windows'
  
  - job: BuildWindowsProd
    dependsOn: ReleaseNotes
    displayName: "Build Widnows PROD"
    pool:
      vmImage: 'windows-latest'
    
    steps:

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'stable'
          version: 'custom'
          customVersion: $(FlutterVersion) 

      - task: CmdLine@2
        displayName: "Flutter clean"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter clean

      - task: CmdLine@2
        displayName: "Flutter enable windows"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter config --enable-windows-desktop
            
      - task: CmdLine@2
        displayName: "Flutter build icons"
        inputs:
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)\flutter pub get
            $(FlutterToolPath)\flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-prod.yaml 

            cd windows/runner/resources
            xcopy /Y app_icon_prod.ico app_icon.ico

      - task: FlutterTest@0
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)'
          generateCodeCoverageReport: true
            
      - task: FlutterBuild@0
        displayName: Windows Release
        inputs:
          target: 'windows'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: $(AppVersion)
          buildFlavour: 'prod'
          entryPoint: 'lib/main_prod.dart'
          buildNumber: $(Build.BuildNumber)

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '$(Build.SourcesDirectory)\build\windows\runner\Release\**'
          targetFolder: '$(build.artifactStagingDirectory)/windows/release'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'prod-windows'