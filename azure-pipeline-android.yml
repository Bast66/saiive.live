trigger:
- main
name: $(BuildID)

stages:
- stage: Android
  displayName: Android
  
  jobs:
  - job: BuildAndroidDev
    displayName: "Build Android DEV"
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'beta'
          version: 'latest'
      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter doctor -v
            $(FlutterToolPath)/flutter precache
            export ENVFILE=.env-Debug
      
      - task: FlutterBuild@0
        displayName: Android Debug APK
        inputs:
          target: 'apk'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: '0.1'
          debugMode: true
          apkTargetPlatform: 'android-arm64'
          buildFlavour: 'dev'

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)/android/debug'
      - task: Bash@3
        displayName: "Flutter clean"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter clean
            $(FlutterToolPath)/flutter precache
            
      - task: FlutterBuild@0
        displayName: Android Release APK
        inputs:
          target: 'apk'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: '0.1'
          apkTargetPlatform: 'android-arm64'
          buildFlavour: 'dev'

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)/android/release'
      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'dev-android'

  - job: BuildAndroidStaging
    displayName: "Build Android STAGING"
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'beta'
          version: 'latest'
      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            export ENVFILE=.env-Staging

      - task: Bash@3
        displayName: "Flutter clean"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter clean
            
      - task: FlutterBuild@0
        displayName: Android Release APK
        inputs:
          target: 'apk'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: '0.1'
          apkTargetPlatform: 'android-arm64'
          buildFlavour: 'staging'

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)/android/release'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'staging-android'
  
  - job: BuildAndroidProd
    displayName: "Build Android PROD"
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:

      - task: FlutterInstall@0
        displayName: "Flutter install"
        inputs:
          channel: 'beta'
          version: 'latest'

      - task: Bash@3
        displayName: "Flutter prepare"
        inputs:
          targetType: 'inline'
          script: |
            export ENVFILE=.env-Prod

      - task: Bash@3
        displayName: "Flutter clean"
        inputs:
          targetType: 'inline'
          script: |
            cd $(Build.SourcesDirectory)
            $(FlutterToolPath)/flutter clean
            
      - task: FlutterBuild@0
        displayName: Android Release APK
        inputs:
          target: 'apk'
          projectDirectory: '$(Build.SourcesDirectory)'
          buildName: '0.1'
          apkTargetPlatform: 'android-arm64'
          buildFlavour: 'prod'

      - task: CopyFiles@2
        displayName: "Copy artifacts"
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)/android/release'

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          ArtifactName: 'prod-android'