# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
name: $(BuildID)

variables: 
  vmImageName: 'macOS-latest'

stages:
- stage: Android
  displayName: Android
  
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    
    steps:

      - task: FlutterInstall@0
        inputs:
          channel: 'beta'
          version: 'latest'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'flutter doctor -v'
          workingDirectory: '$FLUTTER_TOOL_PATH_ENV_VAR'
      
      # - task: FlutterBuild@0
      #   displayName: Android Debug APK
      #   inputs:
      #     target: 'apk'
      #     projectDirectory: '.'
      #     buildName: '0.1'
      #     debugMode: true
      #     apkTargetPlatform: 'android-arm64'
      # - task: CopyFiles@2
      #   inputs:
      #     contents: '**/*.apk'
      #     targetFolder: '$(build.artifactStagingDirectory)/debug'
      # - task: FlutterBuild@0
      #   displayName: Android Release APK
      #   inputs:
      #     target: 'apk'
      #     projectDirectory: '.'
      #     buildName: '0.1'
      #     apkTargetPlatform: 'android-arm64'
      # - task: CopyFiles@2
      #   inputs:
      #     contents: '**/*.apk'
      #     targetFolder: '$(build.artifactStagingDirectory)/release'
      # - task: PublishBuildArtifacts@1
      
